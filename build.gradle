buildscript {
  ext { springBootVersion = '2.2.5.RELEASE' }
  repositories { jcenter() }
  dependencies { 
    classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    classpath("org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.8")
  }
}

plugins {
  id "com.cinnober.gradle.semver-git" version "2.4.0"
  id 'org.springframework.boot' version '2.2.5.RELEASE'
}

//apply plugin: 'java-library'
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'jacoco'
apply plugin: 'org.sonarqube'

group = 'de.gessnerfl.rabbitmq'
description = """RabbitMQ :: Queue Management :: List/Move/Delete dead messages from queues"""

ext.scmUrl = 'git@github.com:gessnerfl/rabbitmq-queue-management.git'
ext.projectUrl = 'https://github.com/gessnerfl/rabbitmq-queue-management'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories { jcenter() }

dependencies {
  implementation 'org.springframework.boot:spring-boot-starter-actuator'
  implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'org.springframework.boot:spring-boot-starter-security'
  implementation 'org.springframework.security:spring-security-ldap'
  implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
  implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'
  implementation 'org.springframework.boot:spring-boot-devtools'

  implementation 'io.github.openfeign:feign-core:10.8'
  implementation 'io.github.openfeign:feign-gson:10.8'
  implementation 'io.github.openfeign:feign-slf4j:10.8'

  implementation 'com.google.code.gson:gson:2.8.6'
  implementation 'commons-codec:commons-codec:1.14'

  implementation 'org.webjars.bowergithub.caldwell:renderjson:1.4.0'
  implementation 'org.webjars.bower:bootstrap:4.4.1'
  implementation 'org.webjars.bower:open-iconic:1.1.1'

  implementation 'com.rabbitmq:amqp-client:5.8.0'

  testImplementation 'com.unboundid:unboundid-ldapsdk:5.0.0'
  testImplementation 'org.springframework.boot:spring-boot-starter-test'
  testImplementation 'org.springframework.security:spring-security-test'
  testImplementation 'org.hamcrest:hamcrest-core:2.2'
  testImplementation "org.testcontainers:testcontainers:1.15.0"
}

task sourcesJar(type: Jar, dependsOn: classes) {
  archiveClassifier = 'sources'
  from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
  archiveClassifier = 'javadoc'
  from javadoc.destinationDir
}

bootJar {
    manifest {
        attributes 'Main-Class': 'org.springframework.boot.loader.PropertiesLauncher'
    }
}

artifacts {
  archives sourcesJar
  archives javadocJar
}

test {
  useJUnitPlatform()
  finalizedBy jacocoTestReport
}

jacocoTestReport {
  dependsOn test
  reports {
    xml.enabled true
    csv.enabled false
    html.enabled true
  }
}

sonarqube {
  properties {
    property 'sonar.host.url', 'https://sonarcloud.io'
    property 'sonar.organization', 'gessnerfl-github'
    property "sonar.projectName", "RabbitMQ Queue Managment"
    property "sonar.projectKey", "de.gessnerfl.rabbitmq-queue-management"
  }
}
